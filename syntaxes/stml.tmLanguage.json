{
	"name": "STML",
	"scopeName": "source.stml",
	"injections": {
		"R:text.stml - (comment.block, meta.tag.*.*.stml, meta.tag.*.*.*.stml, meta.tag.*.*.*.*.stml)": {
			"patterns": [{
				"match": "<",
				"name": "invalid.illegal.bad-angle-bracket.stml"
			}]
		}
	},
	"patterns": [
		{"include": "#comment"},
		{"include": "#doctype"},
		{"include": "#tags-valid"}
	],
	"repository": {
		"tags-valid": {
			"patterns": [
				{
					"begin": "(<)(stml|sss|head|body|title|author|details|block|text|list|item|span|link|tip|language|date|check|value)\\b(?=[\\s\\S]*?(?<!/)>)",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.stml"},
						"2": {"name": "entity.name.tag.$2.stml"}
					},
					"end": "(<)(/)(>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.stml"},
						"2": {"name": "entity.name.tag.$1.stml"},
						"3": {"name": "punctuation.definition.tag.end.stml"}
					},
					"name": "meta.tag.structure.$2.stml $2",
					"contentName": "nest.$2",
					"patterns": [
						{
							"begin": "\\G",
							"end": "(>)",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag.end.stml"}
							},
							"name": "meta.tag.attributes.stml",
							"patterns": [
								{ "include": "#attribute" }
							]
						},
						{
							"include": "$self"
						}
					]
				},
				{
					"begin": "(<)(soul|music|rule|image|embed|include|style|break|tab|space|stml|body|block|text|list|item|span|link|tip)\\b",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.stml"},
						"2": {"name": "entity.name.tag.$2.stml"}
					},
					"end": "(/)(>)",
					"endCaptures": {
						"1": {"name": "entity.name.tag.slash.stml"},
						"2": {"name": "punctuation.definition.tag.end.stml"}
					},
					"name": "meta.tag.structure.$2.stml $2",
					"patterns": [{"include": "#attribute"}]
				}
			]
		},
		"attribute": {
			"patterns": [
				{
					"comment" : "STML attributes: int",
					"begin": "[\\s]+(x|y|z|width|height|margin|marginHorizontal|marginVertical|marginLeft|marginTop|marginRight|marginBottom|padding|paddingHorizontal|paddingVertical|paddingLeft|paddingTop|paddingRight|paddingBottom|slice|sliceHorizontal|sliceVertical|sliceTop|sliceRight|sliceBottom|sliceLeft|borderThickness|borderRadius|shadowAlpha|shadowBlur|shadowX|shadowY|textSize|indent|danceTempo|danceVolume|danceStep|zoom|greaterThan|lessThan|greaterThanOrIs|lessThanOrIs|loadTime)(?![^=\\s])",
					"beginCaptures": {"0": {"name": "entity.other.attribute-name.stml"}}, "end": "(?=\\s*+[^=\\s])", "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{ "match": "([+-]?\\d+)(?![^\\s/>])",			"name": "constant.character.entity.integer.stml" },
							{ "match": "=",									"name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"comment" : "STML attributes: bool",
					"begin": "[\\s]+(borderTop|borderRight|borderBottom|borderLeft|remember|loadChildren|pop)(?![^=\\s])",
					"beginCaptures": {"0": {"name": "entity.other.attribute-name.stml"}}, "end": "(?=\\s*+[^=\\s])", "name": "meta.attribute.$1.stml",
					"patterns": [
						{
							"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
							"patterns": [
								{ "match": "(true|false)(?![^\\s/>])",			"name": "constant.character.entity.boolean.stml" },
								{ "match": "=",									"name": "invalid.illegal.unexpected-equals-sign.stml" }
							]
						}
					]
				},
				{
					"comment" : "STML attributes: string",
					"begin": "[\\s]+(backgroundImage|cursor|id|value|to|source|anchor|style|hoverStyle|clickStyle|visitedStyle|keys)(?![^=\\s])",
					"beginCaptures": {"0": {"name": "entity.other.attribute-name.stml"}}, "end": "(?=\\s*+[^=\\s])", "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{ "match": "([^\\s\"'=<>`\\/]|[\\/](?!>))+",	"name": "constant.character.entity.string.stml" },
							{ "match": "=",									"name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"comment" : "STML attributes: int/bool/string",
					"begin": "[\\s]+(is|not)(?![^=\\s])",
					"beginCaptures": {"0": {"name": "entity.other.attribute-name.stml"}}, "end": "(?=\\s*+[^=\\s])", "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{ "match": "([+-]?\\d+)(?![^\\s/>])",			"name": "constant.character.entity.integer.stml" },
							{ "match": "(true|false)(?![^\\s/>])",			"name": "constant.character.entity.boolean.stml" },
							{ "match": "([^\\s\"'=<>`\\/]|[\\/](?!>))+",	"name": "constant.character.entity.string.stml" },
							{ "match": "=",									"name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"comment" : "STML attributes: hex",
					"begin": "[\\s]+(backgroundColor|borderColor|shadowColor|textColor|pointColor|cursorColor)(?![^=\\s])",
					"beginCaptures": {"0": {"name": "entity.other.attribute-name.stml"}}, "end": "(?=\\s*+[^=\\s])", "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{ "match": "#(([0-9a-fA-F]{3}){1,2})(?![^\\s/>])",	"name": "constant.character.entity.hexadecimal.stml" },
							{ "match": "=",										"name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(display)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": {"0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(flow|floe|anchored|buoyed|none)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(align|backgroundAlign)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(left|center|right|top|middle|middleLeft|middleRight|middleCenter|bottom|bottomLeft|bottomCenter|bottomRight)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(orientation)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(vertical|horizontal)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(backgroundRepeat)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(xy|x|y|slice|none)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(borderType)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(none|solid|dashed|dashedTogether|dashedApart|dotted|pilled|caution)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(font)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(edita|roma|dream|toronto|letter|loos|capital|cutz|mister|noble|hypno|uni|mystica|arkansas)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(fashion)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(none|bold|italic|line|strike|lower|upper|notBold|notItalic|notLine|notStrike|notLower|notUpper)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(listType)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(unordered|ordered|unenumerated)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(pointType)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(circle|circleOpen|square|squareOpen|triangle|triangleOpen|diamond|diamondOpen|arrow|dash|chevron)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(orderType)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(number|latinUpper|romanUpper|latinLower|romanLower)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(cursor)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(default|hand|move|resize|bones|other)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(dance)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(blink|bounce|rock|roll|wiggle|sway|shake|quake|quake2|spin|flip|gyro|pulse|sparkle|hue|marquee)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(blendMode)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(none|multiply|add|screen|difference)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				},
				{
					"begin": "[\\s]+(autoplay)(?![^=\\s])", "end": "(?=\\s*+[^=\\s])", "beginCaptures": { "0": {"name": "entity.other.attribute-name.stml"}}, "name": "meta.attribute.$1.stml",
					"patterns": [{
						"begin": "=", "beginCaptures": {"0": {"name": "punctuation.separator.key-value.stml"}}, "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
						"patterns": [
							{"match": "(true|false|user)(?![^\\s/>])", "name": "constant.character.entity.named.$2.stml"},
							{"match": "=", "name": "invalid.illegal.unexpected-equals-sign.stml" }
						]
					}]
				}
			]
		},
		"doctype": {
			"begin": "(<)(!)(DOCTYPE)",
			"beginCaptures": {
				"1": {"name": "punctuation.definition.tag.begin.stml"},
				"2": {"name": "punctuation.separator.key-value.stml"},
				"3": {"name": "entity.name.tag.stml"}
			},
			"end": " (stml)(>)",
			"endCaptures": {
				"1": {"name": "entity.other.attribute-name.stml"},
				"2": {"name": "punctuation.definition.tag.end.stml"}
			},
			"name": "meta.tag.metadata.doctype.stml"
		},
		"comment": {
			"patterns": [
				{
					"begin": "<<",
					"end": ">>",
					"captures": {
						"0": {"name": "punctuation.definition.comment.stml"}
					},
					"name": "comment.block.stml",
					"patterns": [
						{
							"match": "(section\\s([^>\\n]*?)(?=\\s*>))|((?<=<<)\\s*\\/\\s*(?=>>))",
							"name": "keyword.preprocessor.region.stml"
						}
					]
				}
			]
		}
	}
}